@inject HttpClient Http
@using Models
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject IJSRuntime JS
@inject IDialogService DialogService

<MudNavMenu>
    <MudText Typo="Typo.h6" Class="pt-5 px-4">General</MudText>
    <MudDivider Class="my-2"/>
    <MudNavLink Href="/" Icon="@Icons.Filled.Home" Match=NavLinkMatch.All>Home</MudNavLink>
    <MudNavLink Href="/CreateContract" Icon="@Icons.Filled.Edit">Create a contract</MudNavLink>
    @if(cb != null)
    {
        <MudNavLink OnClick="OpenLastContract" Icon="@Icons.Filled.RateReview">View last contract</MudNavLink>
    }
    <!--
    <MudNavLink Href="/ImportContractBundle" Icon="@Icons.Filled.Upload">Import contract bundle</MudNavLink>
    -->
    <MudText Typo="Typo.h6" Class="pt-5 px-4">Advanced</MudText>
    <MudDivider Class="my-2"/>
    <MudNavLink Href="/ModifyTemplates" Icon="@Icons.Filled.AutoFixHigh">Modify templates</MudNavLink>
    <MudNavLink Href="/Settings" Icon="@Icons.Filled.Settings">Settings</MudNavLink>
</MudNavMenu>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private ContractBundle cb { get; set; }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        List<ContractBundle> cblist = await localStorage.GetItemAsync<List<ContractBundle>>("ContractBundles");
        if(cblist != null)
            cb = cblist.OrderByDescending(c=>c.CreatedAt).FirstOrDefault();
    }

    async void OpenLastContract()
    {
        var param = new DialogParameters();
        param.Add("cb", cb);
        DialogService.Show<ExportContract>("Preview contract",param);
    }
}
