@using Blazored.LocalStorage
@inherits LayoutComponentBase
@inject ILocalStorageService localStorage

<MudThemeProvider Theme="currentTheme"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="1" Dense="true">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@(e => DrawerToggle())"/>
        <MudText Typo="Typo.h5" Class="ml-3 d-sm-flex d-none">Conference Contract Generator</MudText>
        <MudSpacer/>
        <MudMenu Icon="@Icons.Material.Filled.Brightness4" Color="@Color.Inherit" AnchorOrigin="@Origin.BottomLeft" TransformOrigin="@Origin.TopCenter">
            <MudMenuItem OnClick="@(e => ApplyTheme("lightTheme"))">Light theme</MudMenuItem>
            <MudMenuItem OnClick="@(e => ApplyTheme("darkTheme"))">Dark theme</MudMenuItem>
            <MudMenuItem OnClick="@(e => ApplyTheme("deliaTheme"))">Delia theme</MudMenuItem>
            <MudMenuItem OnClick="@(e => ApplyTheme("ghenceaTheme"))">Ghencea theme</MudMenuItem>
        </MudMenu>
        <img src="/media/logo.png" class="img p-1" height="50px" width="50px"/>
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu/>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.False" Class="py-5">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected override async Task OnInitializedAsync()
    {
        ApplyTheme(await localStorage.GetItemAsync<string>("Theme"));
    }

    async void ApplyTheme(string themeName)
    {
        switch (themeName)
        {
            case "lightTheme":
                currentTheme = lightTheme;
                break;
            case "darkTheme":
                currentTheme = darkTheme;
                break;
            case "deliaTheme":
                currentTheme = deliaTheme;
                break;
            case "ghenceaTheme":
                currentTheme = ghenceaTheme;
                break;
            default:
                currentTheme = lightTheme;
                break;
        }
        await localStorage.SetItemAsync("Theme", themeName);
    }

    MudTheme currentTheme = new();

    readonly MudTheme lightTheme = new()
    {
        Palette = new Palette
        {
            Primary = Colors.Blue.Default,
            AppbarBackground = Colors.Blue.Darken2,
            Background = "rgb(245, 245, 245)"
        },
        LayoutProperties = new LayoutProperties
        {
            AppbarHeight = "80px"
        }
    };


    readonly MudTheme darkTheme = new()
    {
        Palette = new Palette
        {
            Black = "#27272f",
            Background = "#32333d",
            BackgroundGrey = "#27272f",
            Surface = "#373740",
            DrawerBackground = "#27272f",
            DrawerText = "rgba(255,255,255, 0.50)",
            DrawerIcon = "rgba(255,255,255, 0.50)",
            AppbarBackground = "#27272f",
            AppbarText = "rgba(255,255,255, 0.70)",
            TextPrimary = "rgba(255,255,255, 0.70)",
            TextSecondary = "rgba(255,255,255, 0.50)",
            ActionDefault = "#adadb1",
            ActionDisabled = "rgba(255,255,255, 0.26)",
            ActionDisabledBackground = "rgba(255,255,255, 0.12)",
            Divider = "rgba(255,255,255, 0.12)",
            DividerLight = "rgba(255,255,255, 0.06)",
            TableLines = "rgba(255,255,255, 0.12)",
            LinesDefault = "rgba(255,255,255, 0.12)",
            LinesInputs = "rgba(255,255,255, 0.3)",
            TextDisabled = "rgba(255,255,255, 0.2)",
            Primary = Colors.Blue.Default
        },
        LayoutProperties = new LayoutProperties
        {
            AppbarHeight = "80px"
        }
    };

    readonly MudTheme deliaTheme = new()
    {
        Palette = new Palette
        {
            Black = "#7E1F86",
            Background = "#893168",
            BackgroundGrey = "#BA5C12",
            Surface = "#373740",
            DrawerBackground = "#27272f",
            DrawerText = "#F2DDA4",
            DrawerIcon = "#A5243D",
            AppbarBackground = "#EDBBB4",
            AppbarText = "#957FEF",
            TextPrimary = "#F26430",
            TextSecondary = "#04724D",
            ActionDefault = "#548687",
            ActionDisabled = "C3EB78",
            ActionDisabledBackground = "#FC9E4F",
            Divider = "#C5EDAC",
            DividerLight = "#F46036",
            TableLines = "#FFB8D1",
            LinesDefault = "#D30C7B",
            LinesInputs = "#657ED4",
            TextDisabled = "#D3A588",
            Primary = "#BBBE64"
        },
        LayoutProperties = new LayoutProperties
        {
            AppbarHeight = "80px"
        }
    };

    readonly MudTheme ghenceaTheme = new()
    {
        Palette = new Palette
        {
            Black = "#7E1F86",
            Background = "#9B5C5C",
            BackgroundGrey = "#5C919B",
            Surface = "#000000",
            DrawerBackground = "#B85ABD",
            DrawerText = "#696505",
            DrawerIcon = "#257405",
            AppbarBackground = "#C2661B",
            AppbarText = "#C21111",
            TextPrimary = "#217194",
            TextSecondary = "#217194",
            ActionDefault = "#024408",
            ActionDisabled = "#024408",
            ActionDisabledBackground = "#440240",
            Divider = "#EB9C88",
            DividerLight = "#00726E",
            TableLines = "#5D2121",
            LinesDefault = "#2D7BFF",
            LinesInputs = "#9C29ED",
            TextDisabled = "#29EDD5",
            Primary = "#99ABA9"
        },
        LayoutProperties = new LayoutProperties
        {
            AppbarHeight = "80px"
        }
    };

}